buildscript {
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.10.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
jar {
    baseName = 'gs-rest-service'
    version =  '0.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web:1.2.3.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.3'
    compile 'org.springframework:spring-context:4.1.6.RELEASE'
    compile 'org.hibernate:hibernate-core:4.3.10.Final'
    compile 'mysql:mysql-connector-java:5.1.34'
    compile 'org.springframework:spring-orm:4.1.6.RELEASE'
    testCompile 'org.mockito:mockito-core:1.9.5'
    compile'org.springframework.boot:spring-boot-starter-logging:1.1.2.RELEASE'
  //  compile 'org.springframework.boot:spring-boot-starter-security:1.2.3.RELEASE'


}

test {

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
}